<?xml version="1.0" encoding="utf-8" ?>
<configuration>
  <configSections>
    <section name="TracerX" type="TracerX.XmlConfigSectionHandler, TracerX" />
    <sectionGroup name="applicationSettings" type="System.Configuration.ApplicationSettingsGroup, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" >
      <section name="SQLcomplianceRegistrationService.Properties.Settings" type="System.Configuration.ClientSettingsSection, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" requirePermission="false" />
    </sectionGroup>
    <sectionGroup name="userSettings" type="System.Configuration.UserSettingsGroup, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" >
      <section name="SQLcomplianceRegistrationService.Properties.Settings" type="System.Configuration.ClientSettingsSection, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" allowExeDefinition="MachineToLocalUser" requirePermission="false" />
    </sectionGroup>
  </configSections>
  <!--<startup useLegacyV2RuntimeActivationPolicy="true">
    <supportedRuntime version="v2.0"/>
    <supportedRuntime version="v4.0"/>
  </startup>
  <runtime>
    <NetFx40_LegacySecurityPolicy enabled="true"/>
  </runtime>-->
  <applicationSettings>
    <SQLcomplianceRegistrationService.Properties.Settings>
        <setting name="ServicePort" serializeAs="String">
            <value>9292</value>
        </setting>
        <setting name="RepositoryHost" serializeAs="String">
            <value>(local)\IDERA</value>
        </setting>
        <setting name="BasicAuthentication" serializeAs="String">
            <value>Windows</value>
        </setting>
        <setting name="InitialUsers" serializeAs="String">
            <value />
        </setting>
        <setting name="TokenSigningKey" serializeAs="String">
            <value>ukzhbKRISMl+Uo0tFIGJq1tjWMFxb6qL</value>
        </setting>
        <setting name="EnableSecurity" serializeAs="String">
            <value>False</value>
        </setting>
        <setting name="CoreServicesUrl" serializeAs="String">
            <value>http://localhost:9292</value>
        </setting>
        <setting name="Version" serializeAs="String">
            <value>5.9.0.0</value>
        </setting>
        <setting name="Instance" serializeAs="String">
            <value>SampleProductInstance</value>
        </setting>
        <setting name="ServiceAdminPassword" serializeAs="String">
            <value>admin</value>
        </setting>
        <setting name="SQLServerName" serializeAs="String">
            <value>(local)</value>
        </setting>
        <setting name="SQLcmRepository" serializeAs="String">
            <value>SQLcompliance</value>
        </setting>
        <setting name="SQLcmSQLServerName" serializeAs="String">
            <value>(local)</value>
        </setting>
        <setting name="ServiceAdminAccount" serializeAs="String">
            <value>Admin</value>
        </setting>
        <setting name="RepositoryDatabase" serializeAs="String">
            <value>SQLcompliance</value>
        </setting>
        <setting name="IsTaggingEnabled" serializeAs="String">
            <value>0</value>
        </setting>
    </SQLcomplianceRegistrationService.Properties.Settings>
  </applicationSettings>
  <TracerX>
    <LogFile>
      <!-- This specifies the directory where the log file will be written. -->
      <!-- Note that the log file name cannot be configured here.  The application should set it internally. -->
      <!-- Also, %LOCALAPPDATA% is specific to each user.  The user is likely to have write access there. -->
      <LogDirectory value="%EXEDIR%\Logs" />
      <!-- This specifies the approximate maximum size the file can grow to in Mb (1 Mb = 2**20). -->
      <!-- Anything over 4095 is coerced to 4095 (i.e. 4,293,918,720 bytes). -->
      <!-- Use 0 to prevent the file from being opened at all (disables all logging). -->
      <MaxSizeMb value="5" />
      <!-- This specifies the number of archived log files to keep.  Anything over 9 is coerced to 9. -->
      <Archives value="3" />
      <!-- This specifies the file size in Kb at which circular logging begins if it hasn't already begun (1 Kb = 2**10). -->
      <!-- Output generated before this point is preserved when the log wraps. -->
      <!-- Anything over 4,193,300 is coerced to 4,193,300 (i.e 4,293,939,200 bytes). -->
      <!-- Use 0 to prevent circular logging from starting based on file size. -->
      <CircularStartSizeKb value="300" />
      <!-- This specifies the number of seconds after opening the log file when circular logging begins if it hasn't already begun. -->
      <!-- Output generated before this point is preserved when the log wraps. -->
      <!-- Use 0 to prevent circular logging from starting based on time. -->
      <CircularStartDelaySeconds value="60" />
    </LogFile>
    <!-- This controls the application event logging performed by TracerX. -->
    <!-- Events 1-100 are errors (e.g. the file can't be opened). -->
    <!-- Events 101-200 are warnings (e.g. max file size reached without starting circular logging). -->
    <!-- Events 201-300 are information (e.g. the output file was opened successfully). -->
    <!-- Generally, there should be no errors or warnings and you want to know about them if they occur, -->
    <!-- so 200 is the recommended value. -->
    <MaxEventNumber value="200" />
    <!-- Create a Logger element for each Logger object whose TraceLevel you want to set. -->
    <!-- Child loggers whose trace levels aren't explicitly set will inherit their parent's trace level. -->
    <!-- Parent-child relationships are determined by the "dotted" substrings with logger names, -->
    <!-- much like C# namespaces. -->
    <!-- The "Root" logger is the ultimate ancestor of all loggers. Other loggers will inherit the root -->
    <!-- trace level unless they are explicitly set here or programatically. -->
    <Logger name="Root">
      <level value="Verbose" />
      <ConsoleTraceLevel value="Info" />
    </Logger>
  </TracerX>
  <userSettings>
    <SQLcomplianceRegistrationService.Properties.Settings>
        <setting name="IsRegistered" serializeAs="String">
            <value>False</value>
        </setting>
        <setting name="ProductId" serializeAs="String">
            <value>0</value>
        </setting>
    </SQLcomplianceRegistrationService.Properties.Settings>
  </userSettings>
</configuration>